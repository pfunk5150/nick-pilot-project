#!/bin/bash
# scripts/init-enhanced-session.sh
# Enhanced session initialization with workflow type support

WORKFLOW_TYPE=$1
TOPIC=$2
DATE=$(date +%Y-%m-%d)

if [ -z "$WORKFLOW_TYPE" ] || [ -z "$TOPIC" ]; then
    echo "Usage: $0 <workflow_type> <topic>"
    echo "Workflow types: session, experimental, enhancement, template, client"
    exit 1
fi

case $WORKFLOW_TYPE in
    "session")
        BRANCH_NAME="feature/session-${DATE}-${TOPIC}"
        CONTEXT_TEMPLATE="session_continuation"
        echo "🎯 Creating AI session workflow for structured engagement"
        ;;
    "experimental")
        BRANCH_NAME="experimental/${TOPIC}"
        CONTEXT_TEMPLATE="experimental_exploration"
        echo "🧪 Creating experimental workflow for isolated exploration"
        ;;
    "enhancement")
        BRANCH_NAME="enhancement/${TOPIC}"
        CONTEXT_TEMPLATE="apm_enhancement"
        echo "🚀 Creating enhancement workflow for APM framework improvements"
        ;;
    "template")
        BRANCH_NAME="template/${TOPIC}"
        CONTEXT_TEMPLATE="template_development"
        echo "📚 Creating template workflow for AI consulting pattern development"
        ;;
    "client")
        BRANCH_NAME="client/${TOPIC}"
        CONTEXT_TEMPLATE="client_customization"
        echo "🎯 Creating client workflow for engagement-specific customizations"
        ;;
    *)
        echo "❌ Error: Workflow type must be: session, experimental, enhancement, template, or client"
        exit 1
        ;;
esac

echo "🚀 Creating ${WORKFLOW_TYPE} workflow: ${BRANCH_NAME}"

# Create branch from master
git checkout master
git pull origin master 2>/dev/null || echo "ℹ️ No remote updates available"
git checkout -b "$BRANCH_NAME"

# Create context initialization file
cat > "workflow_context_${WORKFLOW_TYPE}.md" << EOF
# ${WORKFLOW_TYPE^} Workflow Context

**Branch:** ${BRANCH_NAME}
**Created:** $(date)
**Template:** ${CONTEXT_TEMPLATE}
**Topic:** ${TOPIC}

## Workflow Objectives
- [ ] Initialize ${WORKFLOW_TYPE} environment
- [ ] Set up context bridging for Claude session
- [ ] Establish success criteria
- [ ] Document progress and outcomes

## Context Bridge Status
- [ ] Export repository context loaded
- [ ] Workflow-specific templates applied
- [ ] Session initialization complete

## Next Steps
1. Start Claude session with workflow-specific context
2. Execute planned workflow activities
3. Document outcomes and artifacts
4. Prepare for merge validation

---
*Generated by init-enhanced-session.sh*
EOF

echo "✅ ${WORKFLOW_TYPE} workflow ready: ${BRANCH_NAME}"
echo "📋 Context file created: workflow_context_${WORKFLOW_TYPE}.md"
echo "🎯 Next: Start Claude session with workflow-specific context"
echo ""
echo "🔧 Available commands:"
echo "  ./scripts/validate-merge-candidate.sh  # Pre-merge validation"
echo "  ./scripts/bridge-context.sh           # Enhanced context bridging"
echo "  git add . && git commit -m 'Initial ${WORKFLOW_TYPE} setup'"
